// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vegetable/v1/messages.proto

package vegetable

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVegetableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the vegetable
	// Example: "Apples"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Weight
	Weight float32 `protobuf:"fixed32,2,opt,name=weight,proto3" json:"weight,omitempty"`
	// Vegetable price per kg without discount.
	Price float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	// Discounted price of the vegetable per kg.
	// While there is no discount, it is equal to the price.
	DiscountedPrice float32 `protobuf:"fixed32,5,opt,name=discounted_price,json=discountedPrice,proto3" json:"discounted_price,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateVegetableRequest) Reset() {
	*x = CreateVegetableRequest{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVegetableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVegetableRequest) ProtoMessage() {}

func (x *CreateVegetableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVegetableRequest.ProtoReflect.Descriptor instead.
func (*CreateVegetableRequest) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVegetableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVegetableRequest) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateVegetableRequest) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateVegetableRequest) GetDiscountedPrice() float32 {
	if x != nil {
		return x.DiscountedPrice
	}
	return 0
}

type CreateVegetableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the created vegetable
	VegetableId   string `protobuf:"bytes,1,opt,name=vegetable_id,json=vegetableId,proto3" json:"vegetable_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVegetableResponse) Reset() {
	*x = CreateVegetableResponse{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVegetableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVegetableResponse) ProtoMessage() {}

func (x *CreateVegetableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVegetableResponse.ProtoReflect.Descriptor instead.
func (*CreateVegetableResponse) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVegetableResponse) GetVegetableId() string {
	if x != nil {
		return x.VegetableId
	}
	return ""
}

type DeleteVegetableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the vegetable to delete
	// Must be a valid UUID
	// Example: "14afdc88-596e-413d-98cc-d637b0c69c80"
	VegetableId   string `protobuf:"bytes,1,opt,name=vegetable_id,json=vegetableId,proto3" json:"vegetable_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVegetableRequest) Reset() {
	*x = DeleteVegetableRequest{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVegetableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVegetableRequest) ProtoMessage() {}

func (x *DeleteVegetableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVegetableRequest.ProtoReflect.Descriptor instead.
func (*DeleteVegetableRequest) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteVegetableRequest) GetVegetableId() string {
	if x != nil {
		return x.VegetableId
	}
	return ""
}

type DeleteVegetableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVegetableResponse) Reset() {
	*x = DeleteVegetableResponse{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVegetableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVegetableResponse) ProtoMessage() {}

func (x *DeleteVegetableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVegetableResponse.ProtoReflect.Descriptor instead.
func (*DeleteVegetableResponse) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{3}
}

type GetVegetableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the vegetable to get
	// Must be a valid UUID
	// Example: "14afdc88-596e-413d-98cc-d637b0c69c80"
	VegetableId   string `protobuf:"bytes,1,opt,name=vegetable_id,json=vegetableId,proto3" json:"vegetable_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVegetableRequest) Reset() {
	*x = GetVegetableRequest{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVegetableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVegetableRequest) ProtoMessage() {}

func (x *GetVegetableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVegetableRequest.ProtoReflect.Descriptor instead.
func (*GetVegetableRequest) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{4}
}

func (x *GetVegetableRequest) GetVegetableId() string {
	if x != nil {
		return x.VegetableId
	}
	return ""
}

type GetVegetableResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Vegetable
	Vegetable     *Vegetable `protobuf:"bytes,1,opt,name=vegetable,proto3" json:"vegetable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVegetableResponse) Reset() {
	*x = GetVegetableResponse{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVegetableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVegetableResponse) ProtoMessage() {}

func (x *GetVegetableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVegetableResponse.ProtoReflect.Descriptor instead.
func (*GetVegetableResponse) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{5}
}

func (x *GetVegetableResponse) GetVegetable() *Vegetable {
	if x != nil {
		return x.Vegetable
	}
	return nil
}

type ListVegetablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of vegetables to return. The service may return fewer than
	// this value.
	// If unspecified or equals to 0, at most 50 vegetables will be returned.
	// The maximum value is 1000.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Pagination offset (0-based)
	// Example: 20
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Filter by specific vegetable IDs
	// Example: ["14afdc88-596e-413d-98cc-d637b0c69c80", "e2c0a7d8-4a2f-4e8d-bd6a-8f8b8d7d8e9f"]
	VegetableIds  []string `protobuf:"bytes,3,rep,name=vegetable_ids,json=vegetableIds,proto3" json:"vegetable_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVegetablesRequest) Reset() {
	*x = ListVegetablesRequest{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVegetablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVegetablesRequest) ProtoMessage() {}

func (x *ListVegetablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVegetablesRequest.ProtoReflect.Descriptor instead.
func (*ListVegetablesRequest) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{6}
}

func (x *ListVegetablesRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListVegetablesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListVegetablesRequest) GetVegetableIds() []string {
	if x != nil {
		return x.VegetableIds
	}
	return nil
}

type ListVegetablesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of vegetables.
	Vegetables []*Vegetable `protobuf:"bytes,1,rep,name=vegetables,proto3" json:"vegetables,omitempty"`
	// The total size of the list of vegetables.
	TotalSize     int64 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVegetablesResponse) Reset() {
	*x = ListVegetablesResponse{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVegetablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVegetablesResponse) ProtoMessage() {}

func (x *ListVegetablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVegetablesResponse.ProtoReflect.Descriptor instead.
func (*ListVegetablesResponse) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{7}
}

func (x *ListVegetablesResponse) GetVegetables() []*Vegetable {
	if x != nil {
		return x.Vegetables
	}
	return nil
}

func (x *ListVegetablesResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type VegetableUpdateOperation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the vegetable
	// Must be a valid UUID
	// Example: "14afdc88-596e-413d-98cc-d637b0c69c80"
	VegetableId string `protobuf:"bytes,1,opt,name=vegetable_id,json=vegetableId,proto3" json:"vegetable_id,omitempty"`
	// Optional. Name of the vegetable
	// Must be between 3 and 25 characters long if provided.
	// Example: "Apples"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // Name name = 2;
	// Optional. Weight
	// Must be greater than 0 if provided
	// Example: 0.4
	Weight float32 `protobuf:"fixed32,3,opt,name=weight,proto3" json:"weight,omitempty"`
	// Optional. Price
	// Must be greater than 0 if provided
	// Example: 75.99
	Price float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	// Optional. Discounted price of the vegetable per kg.
	// Must be greater than 0 if provided
	// Example: 69.99
	DiscountedPrice float32 `protobuf:"fixed32,5,opt,name=discounted_price,json=discountedPrice,proto3" json:"discounted_price,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VegetableUpdateOperation) Reset() {
	*x = VegetableUpdateOperation{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VegetableUpdateOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VegetableUpdateOperation) ProtoMessage() {}

func (x *VegetableUpdateOperation) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VegetableUpdateOperation.ProtoReflect.Descriptor instead.
func (*VegetableUpdateOperation) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{8}
}

func (x *VegetableUpdateOperation) GetVegetableId() string {
	if x != nil {
		return x.VegetableId
	}
	return ""
}

func (x *VegetableUpdateOperation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VegetableUpdateOperation) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *VegetableUpdateOperation) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *VegetableUpdateOperation) GetDiscountedPrice() float32 {
	if x != nil {
		return x.DiscountedPrice
	}
	return 0
}

type UpdateVegetableRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The vegetable data to update
	// The update's "vegetable_id" field is used to identify the vegetable to update.
	// Format: /v1/vegetables/{user}
	Update        *VegetableUpdateOperation `protobuf:"bytes,1,opt,name=update,proto3" json:"update,omitempty"`
	UpdateMask    *fieldmaskpb.FieldMask    `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVegetableRequest) Reset() {
	*x = UpdateVegetableRequest{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVegetableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVegetableRequest) ProtoMessage() {}

func (x *UpdateVegetableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVegetableRequest.ProtoReflect.Descriptor instead.
func (*UpdateVegetableRequest) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateVegetableRequest) GetUpdate() *VegetableUpdateOperation {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *UpdateVegetableRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateVegetableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVegetableResponse) Reset() {
	*x = UpdateVegetableResponse{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVegetableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVegetableResponse) ProtoMessage() {}

func (x *UpdateVegetableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVegetableResponse.ProtoReflect.Descriptor instead.
func (*UpdateVegetableResponse) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{10}
}

type BatchUpdateVegetablesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The request message specifying the resources to update.
	// A maximum of 1000 vegetables can be modified in a batch.
	Requests      []*UpdateVegetableRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateVegetablesRequest) Reset() {
	*x = BatchUpdateVegetablesRequest{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateVegetablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateVegetablesRequest) ProtoMessage() {}

func (x *BatchUpdateVegetablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateVegetablesRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateVegetablesRequest) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{11}
}

func (x *BatchUpdateVegetablesRequest) GetRequests() []*UpdateVegetableRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type BatchUpdateVegetablesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Vegetables updated.
	Vegetables    []*Vegetable `protobuf:"bytes,1,rep,name=vegetables,proto3" json:"vegetables,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateVegetablesResponse) Reset() {
	*x = BatchUpdateVegetablesResponse{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchUpdateVegetablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateVegetablesResponse) ProtoMessage() {}

func (x *BatchUpdateVegetablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateVegetablesResponse.ProtoReflect.Descriptor instead.
func (*BatchUpdateVegetablesResponse) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{12}
}

func (x *BatchUpdateVegetablesResponse) GetVegetables() []*Vegetable {
	if x != nil {
		return x.Vegetables
	}
	return nil
}

type Vegetable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the vegetable
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the vegetable
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Weight
	Weight float32 `protobuf:"fixed32,3,opt,name=weight,proto3" json:"weight,omitempty"`
	// Vegetable price per kg without discount.
	Price float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	// Discounted price of the vegetable per kg.
	// While there is no discount, it is equal to the price.
	DiscountedPrice float32 `protobuf:"fixed32,5,opt,name=discounted_price,json=discountedPrice,proto3" json:"discounted_price,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Vegetable) Reset() {
	*x = Vegetable{}
	mi := &file_vegetable_v1_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vegetable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vegetable) ProtoMessage() {}

func (x *Vegetable) ProtoReflect() protoreflect.Message {
	mi := &file_vegetable_v1_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vegetable.ProtoReflect.Descriptor instead.
func (*Vegetable) Descriptor() ([]byte, []int) {
	return file_vegetable_v1_messages_proto_rawDescGZIP(), []int{13}
}

func (x *Vegetable) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vegetable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vegetable) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Vegetable) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Vegetable) GetDiscountedPrice() float32 {
	if x != nil {
		return x.DiscountedPrice
	}
	return 0
}

var File_vegetable_v1_messages_proto protoreflect.FileDescriptor

const file_vegetable_v1_messages_proto_rawDesc = "" +
	"\n" +
	"\x1bvegetable/v1/messages.proto\x12\fvegetable.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a google/protobuf/field_mask.proto\"\xc0\x01\n" +
	"\x16CreateVegetableRequest\x12 \n" +
	"\x04name\x18\x01 \x01(\tB\f\xe0A\x02\xbaH\x06r\x04\x10\x03\x18\x19R\x04name\x12%\n" +
	"\x06weight\x18\x02 \x01(\x02B\r\xe0A\x02\xbaH\a\n" +
	"\x05%\x00\x00\x00\x00R\x06weight\x12#\n" +
	"\x05price\x18\x04 \x01(\x02B\r\xe0A\x02\xbaH\a\n" +
	"\x05%\x00\x00\x00\x00R\x05price\x128\n" +
	"\x10discounted_price\x18\x05 \x01(\x02B\r\xe0A\x02\xbaH\a\n" +
	"\x05%\x00\x00\x00\x00R\x0fdiscountedPrice\"<\n" +
	"\x17CreateVegetableResponse\x12!\n" +
	"\fvegetable_id\x18\x01 \x01(\tR\vvegetableId\"H\n" +
	"\x16DeleteVegetableRequest\x12.\n" +
	"\fvegetable_id\x18\x01 \x01(\tB\v\xe0A\x02\xbaH\x05r\x03\xb0\x01\x01R\vvegetableId\"\x19\n" +
	"\x17DeleteVegetableResponse\"E\n" +
	"\x13GetVegetableRequest\x12.\n" +
	"\fvegetable_id\x18\x01 \x01(\tB\v\xe0A\x02\xbaH\x05r\x03\xb0\x01\x01R\vvegetableId\"M\n" +
	"\x14GetVegetableResponse\x125\n" +
	"\tvegetable\x18\x01 \x01(\v2\x17.vegetable.v1.VegetableR\tvegetable\"\x90\x01\n" +
	"\x15ListVegetablesRequest\x12 \n" +
	"\x05limit\x18\x01 \x01(\x03B\n" +
	"\xbaH\a\"\x05\x18\xe8\a(\x00R\x05limit\x12\x1f\n" +
	"\x06offset\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02(\x00R\x06offset\x124\n" +
	"\rvegetable_ids\x18\x03 \x03(\tB\x0f\xbaH\f\x92\x01\t\x18\x01\"\x05r\x03\xb0\x01\x01R\fvegetableIds\"p\n" +
	"\x16ListVegetablesResponse\x127\n" +
	"\n" +
	"vegetables\x18\x01 \x03(\v2\x17.vegetable.v1.VegetableR\n" +
	"vegetables\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x03R\ttotalSize\"\xb7\x01\n" +
	"\x18VegetableUpdateOperation\x12.\n" +
	"\fvegetable_id\x18\x01 \x01(\tB\v\xe0A\b\xbaH\x05r\x03\xb0\x01\x01R\vvegetableId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06weight\x18\x03 \x01(\x02R\x06weight\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x02R\x05price\x12)\n" +
	"\x10discounted_price\x18\x05 \x01(\x02R\x0fdiscountedPrice\"\xd6\x02\n" +
	"\x16UpdateVegetableRequest\x12C\n" +
	"\x06update\x18\x01 \x01(\v2&.vegetable.v1.VegetableUpdateOperationB\x03\xe0A\x02R\x06update\x12\xf6\x01\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\xb8\x01\xbaH\xb4\x01\xba\x01\xb0\x01\n" +
	"\x11valid_update_mask\x12Lan update mask path must be one of name, weight, price, and discounted_price\x1aMthis.paths.all(path, path in ['name', 'weight', 'price', 'discounted_price'])R\n" +
	"updateMask\"\x19\n" +
	"\x17UpdateVegetableResponse\"p\n" +
	"\x1cBatchUpdateVegetablesRequest\x12P\n" +
	"\brequests\x18\x01 \x03(\v2$.vegetable.v1.UpdateVegetableRequestB\x0e\xe0A\x02\xbaH\b\x92\x01\x05\b\x01\x10\xe8\aR\brequests\"X\n" +
	"\x1dBatchUpdateVegetablesResponse\x127\n" +
	"\n" +
	"vegetables\x18\x01 \x03(\v2\x17.vegetable.v1.VegetableR\n" +
	"vegetables\"\xc4\x01\n" +
	"\tVegetable\x12\x1b\n" +
	"\x02id\x18\x01 \x01(\tB\v\xe0A\b\xbaH\x05r\x03\xb0\x01\x01R\x02id\x12\x1d\n" +
	"\x04name\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x03\x18\x19R\x04name\x12\"\n" +
	"\x06weight\x18\x03 \x01(\x02B\n" +
	"\xbaH\a\n" +
	"\x05%\x00\x00\x00\x00R\x06weight\x12 \n" +
	"\x05price\x18\x04 \x01(\x02B\n" +
	"\xbaH\a\n" +
	"\x05%\x00\x00\x00\x00R\x05price\x125\n" +
	"\x10discounted_price\x18\x05 \x01(\x02B\n" +
	"\xbaH\a\n" +
	"\x05%\x00\x00\x00\x00R\x0fdiscountedPriceB\xbf\x01\n" +
	"\x10com.vegetable.v1B\rMessagesProtoP\x01ZKgitbub.com/escoutdoor/vegetable_store/common/pkg/api/vegetable/v1;vegetable\xa2\x02\x03VXX\xaa\x02\fVegetable.V1\xca\x02\fVegetable\\V1\xe2\x02\x18Vegetable\\V1\\GPBMetadata\xea\x02\rVegetable::V1b\x06proto3"

var (
	file_vegetable_v1_messages_proto_rawDescOnce sync.Once
	file_vegetable_v1_messages_proto_rawDescData []byte
)

func file_vegetable_v1_messages_proto_rawDescGZIP() []byte {
	file_vegetable_v1_messages_proto_rawDescOnce.Do(func() {
		file_vegetable_v1_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vegetable_v1_messages_proto_rawDesc), len(file_vegetable_v1_messages_proto_rawDesc)))
	})
	return file_vegetable_v1_messages_proto_rawDescData
}

var file_vegetable_v1_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_vegetable_v1_messages_proto_goTypes = []any{
	(*CreateVegetableRequest)(nil),        // 0: vegetable.v1.CreateVegetableRequest
	(*CreateVegetableResponse)(nil),       // 1: vegetable.v1.CreateVegetableResponse
	(*DeleteVegetableRequest)(nil),        // 2: vegetable.v1.DeleteVegetableRequest
	(*DeleteVegetableResponse)(nil),       // 3: vegetable.v1.DeleteVegetableResponse
	(*GetVegetableRequest)(nil),           // 4: vegetable.v1.GetVegetableRequest
	(*GetVegetableResponse)(nil),          // 5: vegetable.v1.GetVegetableResponse
	(*ListVegetablesRequest)(nil),         // 6: vegetable.v1.ListVegetablesRequest
	(*ListVegetablesResponse)(nil),        // 7: vegetable.v1.ListVegetablesResponse
	(*VegetableUpdateOperation)(nil),      // 8: vegetable.v1.VegetableUpdateOperation
	(*UpdateVegetableRequest)(nil),        // 9: vegetable.v1.UpdateVegetableRequest
	(*UpdateVegetableResponse)(nil),       // 10: vegetable.v1.UpdateVegetableResponse
	(*BatchUpdateVegetablesRequest)(nil),  // 11: vegetable.v1.BatchUpdateVegetablesRequest
	(*BatchUpdateVegetablesResponse)(nil), // 12: vegetable.v1.BatchUpdateVegetablesResponse
	(*Vegetable)(nil),                     // 13: vegetable.v1.Vegetable
	(*fieldmaskpb.FieldMask)(nil),         // 14: google.protobuf.FieldMask
}
var file_vegetable_v1_messages_proto_depIdxs = []int32{
	13, // 0: vegetable.v1.GetVegetableResponse.vegetable:type_name -> vegetable.v1.Vegetable
	13, // 1: vegetable.v1.ListVegetablesResponse.vegetables:type_name -> vegetable.v1.Vegetable
	8,  // 2: vegetable.v1.UpdateVegetableRequest.update:type_name -> vegetable.v1.VegetableUpdateOperation
	14, // 3: vegetable.v1.UpdateVegetableRequest.update_mask:type_name -> google.protobuf.FieldMask
	9,  // 4: vegetable.v1.BatchUpdateVegetablesRequest.requests:type_name -> vegetable.v1.UpdateVegetableRequest
	13, // 5: vegetable.v1.BatchUpdateVegetablesResponse.vegetables:type_name -> vegetable.v1.Vegetable
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_vegetable_v1_messages_proto_init() }
func file_vegetable_v1_messages_proto_init() {
	if File_vegetable_v1_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vegetable_v1_messages_proto_rawDesc), len(file_vegetable_v1_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vegetable_v1_messages_proto_goTypes,
		DependencyIndexes: file_vegetable_v1_messages_proto_depIdxs,
		MessageInfos:      file_vegetable_v1_messages_proto_msgTypes,
	}.Build()
	File_vegetable_v1_messages_proto = out.File
	file_vegetable_v1_messages_proto_goTypes = nil
	file_vegetable_v1_messages_proto_depIdxs = nil
}
