{
  "swagger": "2.0",
  "info": {
    "title": "Vegetable Store Auth Service",
    "version": "1.0",
    "contact": {
      "name": "Ivan Popov",
      "email": "vanap387@gmail.com"
    }
  },
  "tags": [
    {
      "name": "AuthService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/login": {
      "post": {
        "operationId": "AuthService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "operationId": "AuthService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "operationId": "AuthService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RegisterRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/validate": {
      "post": {
        "operationId": "AuthService_ValidateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ValidateTokenRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address of the user attempting to log in.\nMust be a valid email format."
        },
        "password": {
          "type": "string",
          "title": "Password of the user.\nMust be at least 8 characters long.\nMust only contain alphanumeric characters (a-z, A-Z, 0-9)\nand the following special characters: !@#$%^\u0026*()-_+="
        }
      }
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "Access token for the authenticated session.\nMust be a JWT token."
        },
        "refreshToken": {
          "type": "string",
          "description": "Refresh token that can be used to obtain a new access token.\nMust be in a JWT token."
        }
      }
    },
    "v1RefreshTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string",
          "description": "The refresh token previously issued to the client.\nMust be in a JWT like format."
        }
      }
    },
    "v1RefreshTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "A new access token for the authenticated session.\nMust be in a JWT like format."
        },
        "refreshToken": {
          "type": "string",
          "description": "A new refresh token.\nMust be in a JWT like format."
        }
      }
    },
    "v1RegisterRequest": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name of the user.\nMust be between 1 and 20 characters long."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user.\nMust be between 1 and 20 characters long."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.\nMust be a valid email format."
        },
        "password": {
          "type": "string",
          "title": "Password.\nMust be a valid password:\nMust be at least 8 characters long.\nMust only contain alphanumeric characters (a-z, A-Z, 0-9)\nand the following special characters: !@#$%^\u0026*()-_+="
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number.\nShould be a valid phone number."
        }
      }
    },
    "v1RegisterResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The unique identifier for the newly registered user.\nMust be a valid UUID."
        }
      }
    },
    "v1ValidateTokenRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "The access token to be validated.\nMust be in a JWT like format."
        }
      }
    },
    "v1ValidateTokenResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "The unique identifier of the user associated with the validated access token.\nMust be a valid UUID."
        }
      }
    }
  }
}
